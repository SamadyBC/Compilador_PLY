
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR COMMA DIVIDE ELSE EQUALS FLOAT FLOATN FOR GE GT ID IF INT INTEGER LBRACES LE LPAREN LT MAIN MINUS NE PLUS POWER RBRACES RETURN RPAREN SEMI SEMICOLON STRING TIMES WHILEinicial : INT MAIN LPAREN RPAREN bloco_principal SEMICOLONbloco_principal : LBRACES corpo RBRACEScorpo : comando corpo\n| comandocomando : declaracoes\n| bloco_while\n| bloco_if\n| bloco_for\n| expressaoexpressao : atribuicaodeclaracoes : tipos ID SEMICOLON \n| tipos declaracoes_linha SEMICOLON\n| tipos ID EQUALS values SEMICOLON\n| tipos ID EQUALS ID SEMICOLON\n| tipos ID EQUALS operacao_aritmetica SEMICOLON\n| tipos ID SEMICOLON declaracoes\n| tipos declaracoes_linha SEMICOLON declaracoes\n| tipos ID EQUALS values SEMICOLON declaracoes\n| tipos ID EQUALS ID SEMICOLON declaracoes\n| tipos ID EQUALS operacao_aritmetica SEMICOLON declaracoesdeclaracoes_linha : ID COMMA declaracoes_linha\n| IDbloco_while : WHILE LPAREN condicao RPAREN LBRACES corpo RBRACESbloco_if : IF LPAREN condicao RPAREN LBRACES corpo RBRACES\n| IF LPAREN condicao RPAREN LBRACES corpo RBRACES ELSE LBRACES corpo RBRACES\n| IF LPAREN condicao RPAREN LBRACES corpo RBRACES ELSE bloco_ifbloco_for : FOR LPAREN condicao_for RPAREN LBRACES corpo RBRACEScondicao_for : tipos ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID PLUS PLUS\n| tipos ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID PLUS PLUS\n| ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID PLUS PLUS\n| ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID PLUS PLUS\n| tipos ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID MINUS MINUS\n| tipos ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID MINUS MINUS\n| ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID MINUS MINUS\n| ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID MINUS MINUSatribuicao : ID EQUALS values SEMICOLON\n| ID EQUALS ID SEMICOLON\n| ID EQUALS operacao_aritmetica SEMICOLONoperacao_aritmetica : ID operadores_aritmeticos ID\n| ID operadores_aritmeticos values\n| values operadores_aritmeticos ID\n| values operadores_aritmeticos valuescondicao : values operadores_comparativos values\n| values operadores_comparativos ID\n| ID operadores_comparativos values\n| ID operadores_comparativos IDoperadores_comparativos : LT\n| LE\n| GT\n| GE\n| NEoperadores_aritmeticos : PLUS \n| MINUS\n| TIMES\n| DIVIDE\n| POWERtipos : INT \n| CHAR \n| FLOATvalues : INTEGER\n| STRING\n| FLOATN'
    
_lr_action_items = {'INT':([0,7,10,11,12,13,14,15,21,32,33,36,50,56,57,64,66,79,80,81,86,91,92,95,96,97,103,104,105,111,112,121,],[2,22,22,-5,-6,-7,-8,-9,-10,22,22,22,-16,-17,-37,-36,-38,22,22,22,22,22,22,-19,-18,-20,-23,-24,-27,22,-26,-25,]),'$end':([1,8,],[0,-1,]),'MAIN':([2,],[3,]),'LPAREN':([3,18,19,20,],[4,30,31,32,]),'RPAREN':([4,40,41,42,43,46,47,87,88,89,90,136,137,138,139,140,141,142,143,],[5,-60,-61,-62,67,75,76,-43,-44,-46,-45,-31,-35,-30,-34,-29,-33,-28,-32,]),'LBRACES':([5,67,75,76,108,],[7,86,91,92,111,]),'SEMICOLON':([6,25,27,28,37,38,39,40,41,42,51,52,53,54,55,82,83,84,85,94,101,114,115,117,118,],[8,-2,33,36,57,64,66,-60,-61,-62,79,80,81,-22,-21,-39,-40,-42,-41,102,106,119,120,122,123,]),'WHILE':([7,10,11,12,13,14,15,21,33,36,50,56,57,64,66,79,80,81,86,91,92,95,96,97,103,104,105,111,112,121,],[18,18,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-37,-36,-38,-14,-13,-15,18,18,18,-19,-18,-20,-23,-24,-27,18,-26,-25,]),'IF':([7,10,11,12,13,14,15,21,33,36,50,56,57,64,66,79,80,81,86,91,92,95,96,97,103,104,105,108,111,112,121,],[19,19,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-37,-36,-38,-14,-13,-15,19,19,19,-19,-18,-20,-23,-24,-27,19,19,-26,-25,]),'FOR':([7,10,11,12,13,14,15,21,33,36,50,56,57,64,66,79,80,81,86,91,92,95,96,97,103,104,105,111,112,121,],[20,20,-5,-6,-7,-8,-9,-10,-11,-12,-16,-17,-37,-36,-38,-14,-13,-15,20,20,20,-19,-18,-20,-23,-24,-27,20,-26,-25,]),'CHAR':([7,10,11,12,13,14,15,21,32,33,36,50,56,57,64,66,79,80,81,86,91,92,95,96,97,103,104,105,111,112,121,],[23,23,-5,-6,-7,-8,-9,-10,23,23,23,-16,-17,-37,-36,-38,23,23,23,23,23,23,-19,-18,-20,-23,-24,-27,23,-26,-25,]),'FLOAT':([7,10,11,12,13,14,15,21,32,33,36,50,56,57,64,66,79,80,81,86,91,92,95,96,97,103,104,105,111,112,121,],[24,24,-5,-6,-7,-8,-9,-10,24,24,24,-16,-17,-37,-36,-38,24,24,24,24,24,24,-19,-18,-20,-23,-24,-27,24,-26,-25,]),'ID':([7,10,11,12,13,14,15,16,21,22,23,24,29,30,31,32,33,34,35,36,48,50,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,79,80,81,86,91,92,95,96,97,102,103,104,105,106,110,111,112,113,119,120,121,122,123,],[17,17,-5,-6,-7,-8,-9,27,-10,-57,-58,-59,37,45,45,49,-11,51,54,-12,77,-16,-17,-37,82,-52,-53,-54,-55,-56,-36,85,-38,88,-47,-48,-49,-50,-51,89,-14,-13,-15,17,17,17,-19,-18,-20,107,-23,-24,-27,109,114,17,-26,117,124,125,-25,126,127,]),'RBRACES':([9,10,11,12,13,14,15,21,26,33,36,50,56,57,64,66,79,80,81,95,96,97,98,99,100,103,104,105,112,116,121,],[25,-4,-5,-6,-7,-8,-9,-10,-3,-11,-12,-16,-17,-37,-36,-38,-14,-13,-15,-19,-18,-20,103,104,105,-23,-24,-27,-26,121,-25,]),'EQUALS':([17,27,49,77,],[29,34,78,93,]),'COMMA':([27,54,],[35,35,]),'INTEGER':([29,30,31,34,58,59,60,61,62,63,65,68,69,70,71,72,73,74,78,93,110,113,],[40,40,40,40,40,-52,-53,-54,-55,-56,40,40,-47,-48,-49,-50,-51,40,40,40,40,40,]),'STRING':([29,30,31,34,58,59,60,61,62,63,65,68,69,70,71,72,73,74,78,93,110,113,],[41,41,41,41,41,-52,-53,-54,-55,-56,41,41,-47,-48,-49,-50,-51,41,41,41,41,41,]),'FLOATN':([29,30,31,34,58,59,60,61,62,63,65,68,69,70,71,72,73,74,78,93,110,113,],[42,42,42,42,42,-52,-53,-54,-55,-56,42,42,-47,-48,-49,-50,-51,42,42,42,42,42,]),'PLUS':([37,38,40,41,42,51,52,124,125,126,127,128,130,132,134,],[59,59,-60,-61,-62,59,59,128,130,132,134,136,138,140,142,]),'MINUS':([37,38,40,41,42,51,52,124,125,126,127,129,131,133,135,],[60,60,-60,-61,-62,60,60,129,131,133,135,137,139,141,143,]),'TIMES':([37,38,40,41,42,51,52,],[61,61,-60,-61,-62,61,61,]),'DIVIDE':([37,38,40,41,42,51,52,],[62,62,-60,-61,-62,62,62,]),'POWER':([37,38,40,41,42,51,52,],[63,63,-60,-61,-62,63,63,]),'LT':([40,41,42,44,45,107,109,],[-60,-61,-62,69,69,69,69,]),'LE':([40,41,42,44,45,107,109,],[-60,-61,-62,70,70,70,70,]),'GT':([40,41,42,44,45,107,109,],[-60,-61,-62,71,71,71,71,]),'GE':([40,41,42,44,45,107,109,],[-60,-61,-62,72,72,72,72,]),'NE':([40,41,42,44,45,107,109,],[-60,-61,-62,73,73,73,73,]),'ELSE':([104,],[108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicial':([0,],[1,]),'bloco_principal':([5,],[6,]),'corpo':([7,10,86,91,92,111,],[9,26,98,99,100,116,]),'comando':([7,10,86,91,92,111,],[10,10,10,10,10,10,]),'declaracoes':([7,10,33,36,79,80,81,86,91,92,111,],[11,11,50,56,95,96,97,11,11,11,11,]),'bloco_while':([7,10,86,91,92,111,],[12,12,12,12,12,12,]),'bloco_if':([7,10,86,91,92,108,111,],[13,13,13,13,13,112,13,]),'bloco_for':([7,10,86,91,92,111,],[14,14,14,14,14,14,]),'expressao':([7,10,86,91,92,111,],[15,15,15,15,15,15,]),'tipos':([7,10,32,33,36,79,80,81,86,91,92,111,],[16,16,48,16,16,16,16,16,16,16,16,16,]),'atribuicao':([7,10,86,91,92,111,],[21,21,21,21,21,21,]),'declaracoes_linha':([16,35,],[28,55,]),'values':([29,30,31,34,58,65,68,74,78,93,110,113,],[38,44,44,52,83,84,87,90,94,101,115,118,]),'operacao_aritmetica':([29,34,],[39,53,]),'condicao':([30,31,],[43,46,]),'condicao_for':([32,],[47,]),'operadores_aritmeticos':([37,38,51,52,],[58,65,58,65,]),'operadores_comparativos':([44,45,107,109,],[68,74,110,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicial","S'",1,None,None,None),
  ('inicial -> INT MAIN LPAREN RPAREN bloco_principal SEMICOLON','inicial',6,'p_inicial','sintatic_analyser.py',120),
  ('bloco_principal -> LBRACES corpo RBRACES','bloco_principal',3,'p_bloco_principal','sintatic_analyser.py',129),
  ('corpo -> comando corpo','corpo',2,'p_corpo','sintatic_analyser.py',133),
  ('corpo -> comando','corpo',1,'p_corpo','sintatic_analyser.py',134),
  ('comando -> declaracoes','comando',1,'p_comando','sintatic_analyser.py',138),
  ('comando -> bloco_while','comando',1,'p_comando','sintatic_analyser.py',139),
  ('comando -> bloco_if','comando',1,'p_comando','sintatic_analyser.py',140),
  ('comando -> bloco_for','comando',1,'p_comando','sintatic_analyser.py',141),
  ('comando -> expressao','comando',1,'p_comando','sintatic_analyser.py',142),
  ('expressao -> atribuicao','expressao',1,'p_expressao','sintatic_analyser.py',146),
  ('declaracoes -> tipos ID SEMICOLON','declaracoes',3,'p_declaracoes','sintatic_analyser.py',150),
  ('declaracoes -> tipos declaracoes_linha SEMICOLON','declaracoes',3,'p_declaracoes','sintatic_analyser.py',151),
  ('declaracoes -> tipos ID EQUALS values SEMICOLON','declaracoes',5,'p_declaracoes','sintatic_analyser.py',152),
  ('declaracoes -> tipos ID EQUALS ID SEMICOLON','declaracoes',5,'p_declaracoes','sintatic_analyser.py',153),
  ('declaracoes -> tipos ID EQUALS operacao_aritmetica SEMICOLON','declaracoes',5,'p_declaracoes','sintatic_analyser.py',154),
  ('declaracoes -> tipos ID SEMICOLON declaracoes','declaracoes',4,'p_declaracoes','sintatic_analyser.py',155),
  ('declaracoes -> tipos declaracoes_linha SEMICOLON declaracoes','declaracoes',4,'p_declaracoes','sintatic_analyser.py',156),
  ('declaracoes -> tipos ID EQUALS values SEMICOLON declaracoes','declaracoes',6,'p_declaracoes','sintatic_analyser.py',157),
  ('declaracoes -> tipos ID EQUALS ID SEMICOLON declaracoes','declaracoes',6,'p_declaracoes','sintatic_analyser.py',158),
  ('declaracoes -> tipos ID EQUALS operacao_aritmetica SEMICOLON declaracoes','declaracoes',6,'p_declaracoes','sintatic_analyser.py',159),
  ('declaracoes_linha -> ID COMMA declaracoes_linha','declaracoes_linha',3,'p_declaracao_linha','sintatic_analyser.py',222),
  ('declaracoes_linha -> ID','declaracoes_linha',1,'p_declaracao_linha','sintatic_analyser.py',223),
  ('bloco_while -> WHILE LPAREN condicao RPAREN LBRACES corpo RBRACES','bloco_while',7,'p_bloco_while','sintatic_analyser.py',252),
  ('bloco_if -> IF LPAREN condicao RPAREN LBRACES corpo RBRACES','bloco_if',7,'p_bloco_if','sintatic_analyser.py',256),
  ('bloco_if -> IF LPAREN condicao RPAREN LBRACES corpo RBRACES ELSE LBRACES corpo RBRACES','bloco_if',11,'p_bloco_if','sintatic_analyser.py',257),
  ('bloco_if -> IF LPAREN condicao RPAREN LBRACES corpo RBRACES ELSE bloco_if','bloco_if',9,'p_bloco_if','sintatic_analyser.py',258),
  ('bloco_for -> FOR LPAREN condicao_for RPAREN LBRACES corpo RBRACES','bloco_for',7,'p_bloco_for','sintatic_analyser.py',264),
  ('condicao_for -> tipos ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID PLUS PLUS','condicao_for',12,'p_condicao_for','sintatic_analyser.py',268),
  ('condicao_for -> tipos ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID PLUS PLUS','condicao_for',12,'p_condicao_for','sintatic_analyser.py',269),
  ('condicao_for -> ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID PLUS PLUS','condicao_for',11,'p_condicao_for','sintatic_analyser.py',270),
  ('condicao_for -> ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID PLUS PLUS','condicao_for',11,'p_condicao_for','sintatic_analyser.py',271),
  ('condicao_for -> tipos ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID MINUS MINUS','condicao_for',12,'p_condicao_for','sintatic_analyser.py',272),
  ('condicao_for -> tipos ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID MINUS MINUS','condicao_for',12,'p_condicao_for','sintatic_analyser.py',273),
  ('condicao_for -> ID EQUALS values SEMICOLON ID operadores_comparativos values SEMICOLON ID MINUS MINUS','condicao_for',11,'p_condicao_for','sintatic_analyser.py',274),
  ('condicao_for -> ID EQUALS values SEMICOLON ID operadores_comparativos ID SEMICOLON ID MINUS MINUS','condicao_for',11,'p_condicao_for','sintatic_analyser.py',275),
  ('atribuicao -> ID EQUALS values SEMICOLON','atribuicao',4,'p_atribuicao','sintatic_analyser.py',279),
  ('atribuicao -> ID EQUALS ID SEMICOLON','atribuicao',4,'p_atribuicao','sintatic_analyser.py',280),
  ('atribuicao -> ID EQUALS operacao_aritmetica SEMICOLON','atribuicao',4,'p_atribuicao','sintatic_analyser.py',281),
  ('operacao_aritmetica -> ID operadores_aritmeticos ID','operacao_aritmetica',3,'p_operacao_aritmetica','sintatic_analyser.py',313),
  ('operacao_aritmetica -> ID operadores_aritmeticos values','operacao_aritmetica',3,'p_operacao_aritmetica','sintatic_analyser.py',314),
  ('operacao_aritmetica -> values operadores_aritmeticos ID','operacao_aritmetica',3,'p_operacao_aritmetica','sintatic_analyser.py',315),
  ('operacao_aritmetica -> values operadores_aritmeticos values','operacao_aritmetica',3,'p_operacao_aritmetica','sintatic_analyser.py',316),
  ('condicao -> values operadores_comparativos values','condicao',3,'p_condicao','sintatic_analyser.py',320),
  ('condicao -> values operadores_comparativos ID','condicao',3,'p_condicao','sintatic_analyser.py',321),
  ('condicao -> ID operadores_comparativos values','condicao',3,'p_condicao','sintatic_analyser.py',322),
  ('condicao -> ID operadores_comparativos ID','condicao',3,'p_condicao','sintatic_analyser.py',323),
  ('operadores_comparativos -> LT','operadores_comparativos',1,'p_operadores_comparativos','sintatic_analyser.py',327),
  ('operadores_comparativos -> LE','operadores_comparativos',1,'p_operadores_comparativos','sintatic_analyser.py',328),
  ('operadores_comparativos -> GT','operadores_comparativos',1,'p_operadores_comparativos','sintatic_analyser.py',329),
  ('operadores_comparativos -> GE','operadores_comparativos',1,'p_operadores_comparativos','sintatic_analyser.py',330),
  ('operadores_comparativos -> NE','operadores_comparativos',1,'p_operadores_comparativos','sintatic_analyser.py',331),
  ('operadores_aritmeticos -> PLUS','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintatic_analyser.py',336),
  ('operadores_aritmeticos -> MINUS','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintatic_analyser.py',337),
  ('operadores_aritmeticos -> TIMES','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintatic_analyser.py',338),
  ('operadores_aritmeticos -> DIVIDE','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintatic_analyser.py',339),
  ('operadores_aritmeticos -> POWER','operadores_aritmeticos',1,'p_operadores_aritmeticos','sintatic_analyser.py',340),
  ('tipos -> INT','tipos',1,'p_tipos','sintatic_analyser.py',344),
  ('tipos -> CHAR','tipos',1,'p_tipos','sintatic_analyser.py',345),
  ('tipos -> FLOAT','tipos',1,'p_tipos','sintatic_analyser.py',346),
  ('values -> INTEGER','values',1,'p_values','sintatic_analyser.py',350),
  ('values -> STRING','values',1,'p_values','sintatic_analyser.py',351),
  ('values -> FLOATN','values',1,'p_values','sintatic_analyser.py',352),
]
